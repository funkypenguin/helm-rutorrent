#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

# -- Use an initContainer to delete the rtorrent.lock file when the pod starts
# this is only required if `session.use_lock.set = no` is NOT set
# @default -- See values.yaml
initContainers: {}
  # remove-session-lock:
  #   image: busybox
  #   command: ["sh", "-c", "rm -rf /config/.local/share/rtorrent/.session/rtorrent.lock"]
  #   volumeMounts:
  #   - name: config
  #     mountPath: /config

image:
  # -- image repository
  repository: crazymax/rtorrent-rutorrent
  # @default -- chart.appVersion
  tag:
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables. See [image docs](https://github.com/crazy-max/docker-rtorrent-rutorrent#environment-variables) for more details.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: UTC

# -- Minimal configuration provided from https://github.com/crazy-max/docker-rtorrent-rutorrent/blob/master/rootfs/tpls/.rtorrent.rc
# @default -- string
config: |
  # Launch as a daemon
  system.daemon.set = true

  # Instance layout
  method.insert = cfg.basedir, private|const|string, (cat,"/data/rtorrent/")
  method.insert = cfg.download, private|const|string, (cat,"/downloads/")
  method.insert = cfg.download_complete, private|const|string, (cat,(cfg.download),"complete/")
  method.insert = cfg.download_temp, private|const|string, (cat,(cfg.download),"temp/")
  method.insert = cfg.logs, private|const|string, (cat,(cfg.basedir),"log/")
  method.insert = cfg.session, private|const|string, (cat,(cfg.basedir),".session/")
  method.insert = cfg.watch, private|const|string, (cat,(cfg.basedir),"watch/")
  method.insert = cfg.rundir, private|const|string, (cat,"/var/run/rtorrent/")

  # Gets the full path of data of a torrent (it's a workaround for the possibly empty 'd.base_path' attribute)
  method.insert = d.data_path, simple, "if=(d.is_multi_file), (cat,(d.directory),/), (cat,(d.directory),/,(d.name))"

  # Default directory to save the downloaded torrents
  directory.default.set = (cat,(cfg.download_temp))

  # Default session directory
  session.path.set = (cat,(cfg.session))

  # PID file
  execute.nothrow = sh,-c,(cat,"echo >",(cfg.rundir),"rtorrent.pid"," ",(system.pid))

  # SCGI socket and make it group-writable and secure
  network.scgi.open_local = (cat, (cfg.rundir), "scgi.socket")
  schedule2 = scgi_permission, 0, 0, (cat,"execute.nothrow=chmod,\"g+w,o=\",",(cfg.rundir),"scgi.socket")

  # Listening port for incoming peer traffic
  network.port_range.set = 50000-50000
  network.port_random.set = no

  # UDP port to use for DHT
  dht.port.set = 6881

  # XMLRPC size limit
  network.xmlrpc.size_limit.set = 1M

  # Logging
  ## levels = critical error warn notice info debug
  ## groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
  log.open_file = "log",(cat,(cfg.logs),"rtorrent.log")
  log.add_output = "info","log"
  log.add_output = "rpc_events","log"
  #log.execute = (cat,(cfg.logs),"execute.log")
  #log.xmlrpc = (cat,(cfg.logs),"xmlrpc.log")

  # Initialize plugins
  execute2 = {sh,-c,/usr/bin/php7 /var/www/rutorrent/php/initplugins.php rtorrent &}

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8080

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  data:
    enabled: false

  downloads:
    enabled: false    
